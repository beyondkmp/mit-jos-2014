!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
-prefix	GNUmakefile	/^	git archive --prefix=lab$(LAB)\/ --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCCPREFIX	conf/env.mk	/^GCCPREFIX='i386-jos-elf-'$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=1$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	/^#define NCOMMANDS /;"	d	file:
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 3 09:38:35 EDT 2014$/;"	m
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
UDWtype	obj/kern/kernel.asm	/^UDWtype$/;"	l
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
V	conf/env.mk	/^V = @$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__udivdi3	obj/kern/kernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivmoddi4	obj/kern/kernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__umoddi3	obj/kern/kernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
b	obj/kern/kernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^            base = 8;$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon3	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon3	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d0	obj/kern/kernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/kern/kernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/kern/kernel.asm	/^  d0 = dd.s.low;$/;"	d
d1	obj/kern/kernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/kern/kernel.asm	/^  d1 = dd.s.high;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 f0 10 00       	mov    $0x10f000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 f0 10 f0       	mov    $0xf010f000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 56 00 00 00       	call   f0100094 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	53                   	push   %ebx$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	68 40 17 10 f0       	push   $0xf0101740$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	e8 19 08 00 00       	call   f010086e <cprintf>$/;"	l
f0100055	obj/kern/kernel.asm	/^f0100055:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	85 db                	test   %ebx,%ebx$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	7e 11                	jle    f010006d <test_backtrace+0x2d>$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0100062	obj/kern/kernel.asm	/^f0100062:	50                   	push   %eax$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 d8 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	83 c4 10             	add    $0x10,%esp$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	eb 11                	jmp    f010007e <test_backtrace+0x3e>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	6a 00                	push   $0x0$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	6a 00                	push   $0x0$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	6a 00                	push   $0x0$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	e8 6d 06 00 00       	call   f01006e8 <mon_backtrace>$/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	53                   	push   %ebx$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	68 5c 17 10 f0       	push   $0xf010175c$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	e8 e2 07 00 00       	call   f010086e <cprintf>$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	c9                   	leave  $/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	c3                   	ret    $/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094 <i386_init>:$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	55                   	push   %ebp$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	89 e5                	mov    %esp,%ebp$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	b8 44 19 11 f0       	mov    $0xf0111944,%eax$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	2d 00 13 11 f0       	sub    $0xf0111300,%eax$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	50                   	push   %eax$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	6a 00                	push   $0x0$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	68 00 13 11 f0       	push   $0xf0111300$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	e8 14 12 00 00       	call   f01012c5 <memset>$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	e8 35 04 00 00       	call   f01004eb <cons_init>$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	68 77 17 10 f0       	push   $0xf0101777$/;"	l
f01000c3	obj/kern/kernel.asm	/^f01000c3:	e8 a6 07 00 00       	call   f010086e <cprintf>$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	e8 6c ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	6a 00                	push   $0x0$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	e8 11 06 00 00       	call   f01006f2 <monitor>$/;"	l
f01000e1	obj/kern/kernel.asm	/^f01000e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	eb f1                	jmp    f01000d7 <i386_init+0x43>$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6 <_panic>:$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	55                   	push   %ebp$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	56                   	push   %esi$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	53                   	push   %ebx$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	83 3d 40 19 11 f0 00 	cmpl   $0x0,0xf0111940$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	75 37                	jne    f010012e <_panic+0x48>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	89 35 40 19 11 f0    	mov    %esi,0xf0111940$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	fa                   	cli    $/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	fc                   	cld    $/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100102	obj/kern/kernel.asm	/^f0100102:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	68 92 17 10 f0       	push   $0xf0101792$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 59 07 00 00       	call   f010086e <cprintf>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100118	obj/kern/kernel.asm	/^f0100118:	53                   	push   %ebx$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	56                   	push   %esi$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	e8 29 07 00 00       	call   f0100848 <vcprintf>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	c7 04 24 ce 17 10 f0 	movl   $0xf01017ce,(%esp)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	e8 43 07 00 00       	call   f010086e <cprintf>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	6a 00                	push   $0x0$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	e8 ba 05 00 00       	call   f01006f2 <monitor>$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	83 c4 10             	add    $0x10,%esp$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	eb f1                	jmp    f010012e <_panic+0x48>$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d <_warn>:$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	55                   	push   %ebp$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	53                   	push   %ebx$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	68 aa 17 10 f0       	push   $0xf01017aa$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	e8 17 07 00 00       	call   f010086e <cprintf>$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	83 c4 08             	add    $0x8,%esp$/;"	l
f010015a	obj/kern/kernel.asm	/^f010015a:	53                   	push   %ebx$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	e8 e5 06 00 00       	call   f0100848 <vcprintf>$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	c7 04 24 ce 17 10 f0 	movl   $0xf01017ce,(%esp)$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	e8 ff 06 00 00       	call   f010086e <cprintf>$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	c9                   	leave  $/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	c3                   	ret    $/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177 <serial_proc_data>:$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	55                   	push   %ebp$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	89 e5                	mov    %esp,%ebp$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	ec                   	in     (%dx),%al$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	a8 01                	test   $0x1,%al$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	74 0b                	je     f010018f <serial_proc_data+0x18>$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	ec                   	in     (%dx),%al$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	eb 05                	jmp    f0100194 <serial_proc_data+0x1d>$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	5d                   	pop    %ebp$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	c3                   	ret    $/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196 <cons_intr>:$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	55                   	push   %ebp$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	89 e5                	mov    %esp,%ebp$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	53                   	push   %ebx$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	89 c3                	mov    %eax,%ebx$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	eb 2b                	jmp    f01001cc <cons_intr+0x36>$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	85 c0                	test   %eax,%eax$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	74 27                	je     f01001cc <cons_intr+0x36>$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	8b 0d 24 15 11 f0    	mov    0xf0111524,%ecx$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	89 15 24 15 11 f0    	mov    %edx,0xf0111524$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	88 81 20 13 11 f0    	mov    %al,-0xfeeece0(%ecx)$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	75 0a                	jne    f01001cc <cons_intr+0x36>$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	c7 05 24 15 11 f0 00 	movl   $0x0,0xf0111524$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	00 00 00 $/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	ff d3                	call   *%ebx$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	75 ce                	jne    f01001a1 <cons_intr+0xb>$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	83 c4 04             	add    $0x4,%esp$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	5b                   	pop    %ebx$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	5d                   	pop    %ebp$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	c3                   	ret    $/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9 <kbd_proc_data>:$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	ec                   	in     (%dx),%al$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	a8 01                	test   $0x1,%al$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	0f 84 e6 00 00 00    	je     f01002cd <kbd_proc_data+0xf4>$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	ec                   	in     (%dx),%al$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	88 c2                	mov    %al,%dl$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	3c e0                	cmp    $0xe0,%al$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	75 0d                	jne    f0100200 <kbd_proc_data+0x27>$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	83 0d 00 13 11 f0 40 	orl    $0x40,0xf0111300$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	c3                   	ret    $/;"	l
f0100200	obj/kern/kernel.asm	/^f0100200:	84 c0                	test   %al,%al$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	79 2e                	jns    f0100232 <kbd_proc_data+0x59>$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	8b 0d 00 13 11 f0    	mov    0xf0111300,%ecx$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	75 05                	jne    f0100214 <kbd_proc_data+0x3b>$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	88 c2                	mov    %al,%dl$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	8a 80 20 19 10 f0    	mov    -0xfefe6e0(%eax),%al$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	f7 d0                	not    %eax$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	21 c8                	and    %ecx,%eax$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	a3 00 13 11 f0       	mov    %eax,0xf0111300$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	c3                   	ret    $/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	55                   	push   %ebp$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	89 e5                	mov    %esp,%ebp$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	53                   	push   %ebx$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	8b 0d 00 13 11 f0    	mov    0xf0111300,%ecx$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	74 0e                	je     f0100252 <kbd_proc_data+0x79>$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	88 c2                	mov    %al,%dl$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	89 0d 00 13 11 f0    	mov    %ecx,0xf0111300$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	0f b6 90 20 19 10 f0 	movzbl -0xfefe6e0(%eax),%edx$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	0b 15 00 13 11 f0    	or     0xf0111300,%edx$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	0f b6 88 20 18 10 f0 	movzbl -0xfefe7e0(%eax),%ecx$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	31 ca                	xor    %ecx,%edx$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	89 15 00 13 11 f0    	mov    %edx,0xf0111300$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	89 d1                	mov    %edx,%ecx$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	8b 0c 8d 00 18 10 f0 	mov    -0xfefe800(,%ecx,4),%ecx$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	8a 04 01             	mov    (%ecx,%eax,1),%al$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	f6 c2 08             	test   $0x8,%dl$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	74 1a                	je     f01002a2 <kbd_proc_data+0xc9>$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	89 d8                	mov    %ebx,%eax$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	77 05                	ja     f0100297 <kbd_proc_data+0xbe>$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	eb 0b                	jmp    f01002a2 <kbd_proc_data+0xc9>$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	83 e8 41             	sub    $0x41,%eax$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	83 f8 19             	cmp    $0x19,%eax$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	77 03                	ja     f01002a2 <kbd_proc_data+0xc9>$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	f7 d2                	not    %edx$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	f6 c2 06             	test   $0x6,%dl$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	75 2a                	jne    f01002d3 <kbd_proc_data+0xfa>$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	75 26                	jne    f01002d7 <kbd_proc_data+0xfe>$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	68 c4 17 10 f0       	push   $0xf01017c4$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	e8 b0 05 00 00       	call   f010086e <cprintf>$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	b0 03                	mov    $0x3,%al$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	ee                   	out    %al,(%dx)$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	89 d8                	mov    %ebx,%eax$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	eb 0c                	jmp    f01002d9 <kbd_proc_data+0x100>$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	c3                   	ret    $/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	89 d8                	mov    %ebx,%eax$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	eb 02                	jmp    f01002d9 <kbd_proc_data+0x100>$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	89 d8                	mov    %ebx,%eax$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	c9                   	leave  $/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	c3                   	ret    $/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de <cons_putc>:$/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	55                   	push   %ebp$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	57                   	push   %edi$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	56                   	push   %esi$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	53                   	push   %ebx$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	89 c1                	mov    %eax,%ecx$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	bf 84 00 00 00       	mov    $0x84,%edi$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	eb 06                	jmp    f0100300 <cons_putc+0x22>$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	89 fa                	mov    %edi,%edx$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	ec                   	in     (%dx),%al$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	ec                   	in     (%dx),%al$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	ec                   	in     (%dx),%al$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	ec                   	in     (%dx),%al$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	89 f2                	mov    %esi,%edx$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	ec                   	in     (%dx),%al$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	84 c0                	test   %al,%al$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	78 03                	js     f010030a <cons_putc+0x2c>$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	4b                   	dec    %ebx$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	75 f0                	jne    f01002fa <cons_putc+0x1c>$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	88 c8                	mov    %cl,%al$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	ee                   	out    %al,(%dx)$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	b0 0d                	mov    $0xd,%al$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	ee                   	out    %al,(%dx)$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	b0 08                	mov    $0x8,%al$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	ee                   	out    %al,(%dx)$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	f7 c1 00 ff ff ff    	test   $0xffffff00,%ecx$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	75 03                	jne    f0100328 <cons_putc+0x4a>$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	80 cd 07             	or     $0x7,%ch$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	74 77                	je     f01003a7 <cons_putc+0xc9>$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	7f 0a                	jg     f010033f <cons_putc+0x61>$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	74 14                	je     f010034e <cons_putc+0x70>$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	e9 9c 00 00 00       	jmp    f01003db <cons_putc+0xfd>$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	74 3a                	je     f010037e <cons_putc+0xa0>$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	74 3d                	je     f0100386 <cons_putc+0xa8>$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	e9 8d 00 00 00       	jmp    f01003db <cons_putc+0xfd>$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	66 a1 28 15 11 f0    	mov    0xf0111528,%ax$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	66 85 c0             	test   %ax,%ax$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	0f 84 e9 00 00 00    	je     f0100446 <cons_putc+0x168>$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	48                   	dec    %eax$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	66 a3 28 15 11 f0    	mov    %ax,0xf0111528$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	89 cf                	mov    %ecx,%edi$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	81 e7 00 ff ff ff    	and    $0xffffff00,%edi$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	8b 15 2c 15 11 f0    	mov    0xf011152c,%edx$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	eb 7a                	jmp    f01003f8 <cons_putc+0x11a>$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	66 83 05 28 15 11 f0 	addw   $0x50,0xf0111528$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	50 $/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	66 8b 0d 28 15 11 f0 	mov    0xf0111528,%cx$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	89 c8                	mov    %ecx,%eax$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	66 f7 f3             	div    %bx$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	29 d1                	sub    %edx,%ecx$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	66 89 0d 28 15 11 f0 	mov    %cx,0xf0111528$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	eb 51                	jmp    f01003f8 <cons_putc+0x11a>$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	e8 2d ff ff ff       	call   f01002de <cons_putc>$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	e8 23 ff ff ff       	call   f01002de <cons_putc>$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	e8 19 ff ff ff       	call   f01002de <cons_putc>$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	e8 0f ff ff ff       	call   f01002de <cons_putc>$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	e8 05 ff ff ff       	call   f01002de <cons_putc>$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	eb 1d                	jmp    f01003f8 <cons_putc+0x11a>$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	66 a1 28 15 11 f0    	mov    0xf0111528,%ax$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	66 89 15 28 15 11 f0 	mov    %dx,0xf0111528$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	8b 15 2c 15 11 f0    	mov    0xf011152c,%edx$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	66 81 3d 28 15 11 f0 	cmpw   $0x7cf,0xf0111528$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	cf 07 $/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	76 43                	jbe    f0100446 <cons_putc+0x168>$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	a1 2c 15 11 f0       	mov    0xf011152c,%eax$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	52                   	push   %edx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	50                   	push   %eax$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	e8 f5 0e 00 00       	call   f0101312 <memmove>$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	8b 15 2c 15 11 f0    	mov    0xf011152c,%edx$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	83 c0 02             	add    $0x2,%eax$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	39 d0                	cmp    %edx,%eax$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	75 f4                	jne    f0100432 <cons_putc+0x154>$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	66 83 2d 28 15 11 f0 	subw   $0x50,0xf0111528$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	50 $/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	8b 0d 30 15 11 f0    	mov    0xf0111530,%ecx$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	b0 0e                	mov    $0xe,%al$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100450	obj/kern/kernel.asm	/^f0100450:	ee                   	out    %al,(%dx)$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	66 a1 28 15 11 f0    	mov    0xf0111528,%ax$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	89 da                	mov    %ebx,%edx$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	ee                   	out    %al,(%dx)$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	b0 0f                	mov    $0xf,%al$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	89 ca                	mov    %ecx,%edx$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	ee                   	out    %al,(%dx)$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	a0 28 15 11 f0       	mov    0xf0111528,%al$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	89 da                	mov    %ebx,%edx$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	ee                   	out    %al,(%dx)$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	5b                   	pop    %ebx$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	5e                   	pop    %esi$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	5f                   	pop    %edi$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	5d                   	pop    %ebp$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	c3                   	ret    $/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476 <serial_intr>:$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	80 3d 34 15 11 f0 00 	cmpb   $0x0,0xf0111534$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	74 11                	je     f0100490 <serial_intr+0x1a>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	55                   	push   %ebp$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	89 e5                	mov    %esp,%ebp$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	b8 77 01 10 f0       	mov    $0xf0100177,%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	e8 07 fd ff ff       	call   f0100196 <cons_intr>$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	c9                   	leave  $/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	c3                   	ret    $/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491 <kbd_intr>:$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	55                   	push   %ebp$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	89 e5                	mov    %esp,%ebp$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	b8 d9 01 10 f0       	mov    $0xf01001d9,%eax$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	e8 f5 fc ff ff       	call   f0100196 <cons_intr>$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	c9                   	leave  $/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	c3                   	ret    $/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3 <cons_getc>:$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	55                   	push   %ebp$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	e8 c8 ff ff ff       	call   f0100476 <serial_intr>$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	e8 de ff ff ff       	call   f0100491 <kbd_intr>$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	a1 20 15 11 f0       	mov    0xf0111520,%eax$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	3b 05 24 15 11 f0    	cmp    0xf0111524,%eax$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	74 24                	je     f01004e4 <cons_getc+0x41>$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	89 15 20 15 11 f0    	mov    %edx,0xf0111520$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	0f b6 80 20 13 11 f0 	movzbl -0xfeeece0(%eax),%eax$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	75 11                	jne    f01004e9 <cons_getc+0x46>$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	c7 05 20 15 11 f0 00 	movl   $0x0,0xf0111520$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	00 00 00 $/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	eb 05                	jmp    f01004e9 <cons_getc+0x46>$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	c9                   	leave  $/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	c3                   	ret    $/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb <cons_init>:$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	55                   	push   %ebp$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	56                   	push   %esi$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	53                   	push   %ebx$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	5a a5 $/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	74 11                	je     f010051d <cons_init+0x32>$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	c7 05 30 15 11 f0 b4 	movl   $0x3b4,0xf0111530$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	03 00 00 $/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	eb 16                	jmp    f0100533 <cons_init+0x48>$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	c7 05 30 15 11 f0 d4 	movl   $0x3d4,0xf0111530$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	03 00 00 $/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	b0 0e                	mov    $0xe,%al$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	8b 15 30 15 11 f0    	mov    0xf0111530,%edx$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	ee                   	out    %al,(%dx)$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	8d 5a 01             	lea    0x1(%edx),%ebx$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	89 da                	mov    %ebx,%edx$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	ec                   	in     (%dx),%al$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	b0 0f                	mov    $0xf,%al$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	8b 15 30 15 11 f0    	mov    0xf0111530,%edx$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	ee                   	out    %al,(%dx)$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	89 da                	mov    %ebx,%edx$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	ec                   	in     (%dx),%al$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	89 35 2c 15 11 f0    	mov    %esi,0xf011152c$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	09 c8                	or     %ecx,%eax$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	66 a3 28 15 11 f0    	mov    %ax,0xf0111528$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	b0 00                	mov    $0x0,%al$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	89 f2                	mov    %esi,%edx$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	ee                   	out    %al,(%dx)$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	b0 80                	mov    $0x80,%al$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	ee                   	out    %al,(%dx)$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	b0 0c                	mov    $0xc,%al$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	89 da                	mov    %ebx,%edx$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	ee                   	out    %al,(%dx)$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	b0 00                	mov    $0x0,%al$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	ee                   	out    %al,(%dx)$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	b0 03                	mov    $0x3,%al$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	ee                   	out    %al,(%dx)$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	b0 00                	mov    $0x0,%al$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	ee                   	out    %al,(%dx)$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	b0 01                	mov    $0x1,%al$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	ee                   	out    %al,(%dx)$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	ec                   	in     (%dx),%al$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	88 c1                	mov    %al,%cl$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	3c ff                	cmp    $0xff,%al$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	0f 95 05 34 15 11 f0 	setne  0xf0111534$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	89 f2                	mov    %esi,%edx$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	ec                   	in     (%dx),%al$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	89 da                	mov    %ebx,%edx$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	ec                   	in     (%dx),%al$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	75 10                	jne    f01005cd <cons_init+0xe2>$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	68 d0 17 10 f0       	push   $0xf01017d0$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	e8 a4 02 00 00       	call   f010086e <cprintf>$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	83 c4 10             	add    $0x10,%esp$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	5b                   	pop    %ebx$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	5e                   	pop    %esi$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	5d                   	pop    %ebp$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	c3                   	ret    $/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4 <cputchar>:$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	55                   	push   %ebp$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	e8 fc fc ff ff       	call   f01002de <cons_putc>$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	c9                   	leave  $/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	c3                   	ret    $/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4 <getchar>:$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	55                   	push   %ebp$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	e8 b4 fe ff ff       	call   f01004a3 <cons_getc>$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	85 c0                	test   %eax,%eax$/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	74 f7                	je     f01005ea <getchar+0x6>$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	c9                   	leave  $/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	c3                   	ret    $/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5 <iscons>:$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	55                   	push   %ebp$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	5d                   	pop    %ebp$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	c3                   	ret    $/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff <mon_help>:$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	55                   	push   %ebp$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	89 e5                	mov    %esp,%ebp$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	68 20 1a 10 f0       	push   $0xf0101a20$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	68 3e 1a 10 f0       	push   $0xf0101a3e$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	68 43 1a 10 f0       	push   $0xf0101a43$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	e8 55 02 00 00       	call   f010086e <cprintf>$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	68 ac 1a 10 f0       	push   $0xf0101aac$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	68 4c 1a 10 f0       	push   $0xf0101a4c$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	68 43 1a 10 f0       	push   $0xf0101a43$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	e8 3e 02 00 00       	call   f010086e <cprintf>$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	c9                   	leave  $/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	c3                   	ret    $/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637 <mon_kerninfo>:$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	55                   	push   %ebp$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	89 e5                	mov    %esp,%ebp$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	68 55 1a 10 f0       	push   $0xf0101a55$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	e8 27 02 00 00       	call   f010086e <cprintf>$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	83 c4 08             	add    $0x8,%esp$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	68 d4 1a 10 f0       	push   $0xf0101ad4$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	e8 15 02 00 00       	call   f010086e <cprintf>$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	68 fc 1a 10 f0       	push   $0xf0101afc$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	e8 fe 01 00 00       	call   f010086e <cprintf>$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	68 29 17 10 00       	push   $0x101729$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	68 29 17 10 f0       	push   $0xf0101729$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	68 20 1b 10 f0       	push   $0xf0101b20$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	e8 e7 01 00 00       	call   f010086e <cprintf>$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	68 00 13 11 00       	push   $0x111300$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	68 00 13 11 f0       	push   $0xf0111300$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	68 44 1b 10 f0       	push   $0xf0101b44$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	e8 d0 01 00 00       	call   f010086e <cprintf>$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	68 44 19 11 00       	push   $0x111944$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	68 44 19 11 f0       	push   $0xf0111944$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	68 68 1b 10 f0       	push   $0xf0101b68$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	e8 b9 01 00 00       	call   f010086e <cprintf>$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	b8 43 1d 11 f0       	mov    $0xf0111d43,%eax$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	83 c4 08             	add    $0x8,%esp$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	89 c2                	mov    %eax,%edx$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	85 c0                	test   %eax,%eax$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	79 06                	jns    f01006d3 <mon_kerninfo+0x9c>$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	52                   	push   %edx$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	68 8c 1b 10 f0       	push   $0xf0101b8c$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	e8 8d 01 00 00       	call   f010086e <cprintf>$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	c9                   	leave  $/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	c3                   	ret    $/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8 <mon_backtrace>:$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	55                   	push   %ebp$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	5d                   	pop    %ebp$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	c3                   	ret    $/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2 <monitor>:$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	55                   	push   %ebp$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	57                   	push   %edi$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	56                   	push   %esi$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	53                   	push   %ebx$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	68 b8 1b 10 f0       	push   $0xf0101bb8$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	e8 69 01 00 00       	call   f010086e <cprintf>$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	c7 04 24 dc 1b 10 f0 	movl   $0xf0101bdc,(%esp)$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	e8 5d 01 00 00       	call   f010086e <cprintf>$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	68 6e 1a 10 f0       	push   $0xf0101a6e$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	e8 57 09 00 00       	call   f0101078 <readline>$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	89 c3                	mov    %eax,%ebx$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	85 c0                	test   %eax,%eax$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	74 ea                	je     f0100714 <monitor+0x22>$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	eb 0a                	jmp    f0100742 <monitor+0x50>$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	89 f7                	mov    %esi,%edi$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	89 fe                	mov    %edi,%esi$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	8a 03                	mov    (%ebx),%al$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	84 c0                	test   %al,%al$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	74 60                	je     f01007a8 <monitor+0xb6>$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	0f be c0             	movsbl %al,%eax$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	50                   	push   %eax$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	68 72 1a 10 f0       	push   $0xf0101a72$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	e8 37 0b 00 00       	call   f0101290 <strchr>$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	83 c4 10             	add    $0x10,%esp$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	85 c0                	test   %eax,%eax$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	75 d8                	jne    f0100738 <monitor+0x46>$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	74 43                	je     f01007a8 <monitor+0xb6>$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	75 14                	jne    f010077e <monitor+0x8c>$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	6a 10                	push   $0x10$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	68 77 1a 10 f0       	push   $0xf0101a77$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	e8 f5 00 00 00       	call   f010086e <cprintf>$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	83 c4 10             	add    $0x10,%esp$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	eb 96                	jmp    f0100714 <monitor+0x22>$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	eb 01                	jmp    f0100788 <monitor+0x96>$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	43                   	inc    %ebx$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	8a 03                	mov    (%ebx),%al$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	84 c0                	test   %al,%al$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	74 b2                	je     f0100740 <monitor+0x4e>$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	0f be c0             	movsbl %al,%eax$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	50                   	push   %eax$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	68 72 1a 10 f0       	push   $0xf0101a72$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	e8 f1 0a 00 00       	call   f0101290 <strchr>$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	85 c0                	test   %eax,%eax$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	74 e1                	je     f0100787 <monitor+0x95>$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	eb 98                	jmp    f0100740 <monitor+0x4e>$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	00 $/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	85 f6                	test   %esi,%esi$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	0f 84 5c ff ff ff    	je     f0100714 <monitor+0x22>$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	68 3e 1a 10 f0       	push   $0xf0101a3e$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	e8 74 0a 00 00       	call   f010123c <strcmp>$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	85 c0                	test   %eax,%eax$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	74 1e                	je     f01007ed <monitor+0xfb>$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	68 4c 1a 10 f0       	push   $0xf0101a4c$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	e8 5d 0a 00 00       	call   f010123c <strcmp>$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	85 c0                	test   %eax,%eax$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	75 2f                	jne    f0100815 <monitor+0x123>$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	eb 05                	jmp    f01007f2 <monitor+0x100>$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	01 d0                	add    %edx,%eax$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	51                   	push   %ecx$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	56                   	push   %esi$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	ff 14 85 0c 1c 10 f0 	call   *-0xfefe3f4(,%eax,4)$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	83 c4 10             	add    $0x10,%esp$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	85 c0                	test   %eax,%eax$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	78 1d                	js     f010082d <monitor+0x13b>$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	e9 ff fe ff ff       	jmp    f0100714 <monitor+0x22>$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	68 94 1a 10 f0       	push   $0xf0101a94$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	e8 49 00 00 00       	call   f010086e <cprintf>$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	e9 e7 fe ff ff       	jmp    f0100714 <monitor+0x22>$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	5b                   	pop    %ebx$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	5e                   	pop    %esi$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	5f                   	pop    %edi$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	5d                   	pop    %ebp$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	c3                   	ret    $/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835 <putch>:$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	55                   	push   %ebp$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	89 e5                	mov    %esp,%ebp$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	e8 91 fd ff ff       	call   f01005d4 <cputchar>$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	c9                   	leave  $/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	c3                   	ret    $/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848 <vcprintf>:$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	55                   	push   %ebp$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	89 e5                	mov    %esp,%ebp$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	50                   	push   %eax$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	68 35 08 10 f0       	push   $0xf0100835$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	e8 14 04 00 00       	call   f0100c7d <vprintfmt>$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	c9                   	leave  $/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	c3                   	ret    $/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e <cprintf>:$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	55                   	push   %ebp$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100877	obj/kern/kernel.asm	/^f0100877:	50                   	push   %eax$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	e8 c8 ff ff ff       	call   f0100848 <vcprintf>$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	c9                   	leave  $/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	c3                   	ret    $/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882 <stab_binsearch>:$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	55                   	push   %ebp$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	89 e5                	mov    %esp,%ebp$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	57                   	push   %edi$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	56                   	push   %esi$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	53                   	push   %ebx$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	8b 01                	mov    (%ecx),%eax$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	eb 7e                	jmp    f0100925 <stab_binsearch+0xa3>$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	01 d8                	add    %ebx,%eax$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	89 c6                	mov    %eax,%esi$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	01 c6                	add    %eax,%esi$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	d1 fe                	sar    %esi$/;"	d
f01008b5	obj/kern/kernel.asm	/^f01008b5:	8d 04 36             	lea    (%esi,%esi,1),%eax$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	01 f0                	add    %esi,%eax$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	89 f0                	mov    %esi,%eax$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	eb 01                	jmp    f01008c6 <stab_binsearch+0x44>$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	48                   	dec    %eax$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	39 c3                	cmp    %eax,%ebx$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	7f 0c                	jg     f01008d6 <stab_binsearch+0x54>$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	39 f9                	cmp    %edi,%ecx$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	75 f1                	jne    f01008c5 <stab_binsearch+0x43>$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	eb 05                	jmp    f01008db <stab_binsearch+0x59>$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	eb 4a                	jmp    f0100925 <stab_binsearch+0xa3>$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	01 c2                	add    %eax,%edx$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	76 11                	jbe    f01008fd <stab_binsearch+0x7b>$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	89 03                	mov    %eax,(%ebx)$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	eb 28                	jmp    f0100925 <stab_binsearch+0xa3>$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	73 12                	jae    f0100914 <stab_binsearch+0x92>$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	48                   	dec    %eax$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	89 06                	mov    %eax,(%esi)$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	eb 11                	jmp    f0100925 <stab_binsearch+0xa3>$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	89 06                	mov    %eax,(%esi)$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	89 c3                	mov    %eax,%ebx$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	0f 8e 79 ff ff ff    	jle    f01008a7 <stab_binsearch+0x25>$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	75 0d                	jne    f0100941 <stab_binsearch+0xbf>$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	8b 00                	mov    (%eax),%eax$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	48                   	dec    %eax$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	89 07                	mov    %eax,(%edi)$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	eb 2c                	jmp    f010096d <stab_binsearch+0xeb>$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	8b 00                	mov    (%eax),%eax$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	8b 0e                	mov    (%esi),%ecx$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	01 c2                	add    %eax,%edx$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edx$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	eb 01                	jmp    f010095a <stab_binsearch+0xd8>$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	48                   	dec    %eax$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	39 c8                	cmp    %ecx,%eax$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	7e 0a                	jle    f0100968 <stab_binsearch+0xe6>$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	39 df                	cmp    %ebx,%edi$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	75 f1                	jne    f0100959 <stab_binsearch+0xd7>$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	89 07                	mov    %eax,(%edi)$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	5b                   	pop    %ebx$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	5e                   	pop    %esi$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	5f                   	pop    %edi$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	5d                   	pop    %ebp$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	c3                   	ret    $/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975 <debuginfo_eip>:$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	55                   	push   %ebp$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	89 e5                	mov    %esp,%ebp$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	57                   	push   %edi$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	56                   	push   %esi$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	53                   	push   %ebx$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	c7 06 1c 1c 10 f0    	movl   $0xf0101c1c,(%esi)$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	c7 46 08 1c 1c 10 f0 	movl   $0xf0101c1c,0x8(%esi)$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	76 11                	jbe    f01009c2 <debuginfo_eip+0x4d>$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	b8 4d 6d 10 f0       	mov    $0xf0106d4d,%eax$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	3d b9 54 10 f0       	cmp    $0xf01054b9,%eax$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	77 19                	ja     f01009d6 <debuginfo_eip+0x61>$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	e9 72 01 00 00       	jmp    f0100b34 <debuginfo_eip+0x1bf>$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	68 26 1c 10 f0       	push   $0xf0101c26$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	6a 7f                	push   $0x7f$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	68 33 1c 10 f0       	push   $0xf0101c33$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	e8 10 f7 ff ff       	call   f01000e6 <_panic>$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	80 3d 4c 6d 10 f0 00 	cmpb   $0x0,0xf0106d4c$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	0f 85 58 01 00 00    	jne    f0100b3b <debuginfo_eip+0x1c6>$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	b8 b8 54 10 f0       	mov    $0xf01054b8,%eax$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	2d 70 1e 10 f0       	sub    $0xf0101e70,%eax$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	8d 0c 90             	lea    (%eax,%edx,4),%ecx$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	89 ca                	mov    %ecx,%edx$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	c1 e2 08             	shl    $0x8,%edx$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	01 d1                	add    %edx,%ecx$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	89 ca                	mov    %ecx,%edx$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	01 ca                	add    %ecx,%edx$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	01 d2                	add    %edx,%edx$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	57                   	push   %edi$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	6a 64                	push   $0x64$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	b8 70 1e 10 f0       	mov    $0xf0101e70,%eax$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	e8 55 fe ff ff       	call   f0100882 <stab_binsearch>$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	85 c0                	test   %eax,%eax$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	0f 84 07 01 00 00    	je     f0100b42 <debuginfo_eip+0x1cd>$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	57                   	push   %edi$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	6a 24                	push   $0x24$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	b8 70 1e 10 f0       	mov    $0xf0101e70,%eax$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	e8 28 fe ff ff       	call   f0100882 <stab_binsearch>$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	3b 5d d8             	cmp    -0x28(%ebp),%ebx$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	7f 33                	jg     f0100a98 <debuginfo_eip+0x123>$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	8d 04 1b             	lea    (%ebx,%ebx,1),%eax$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	01 d8                	add    %ebx,%eax$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	8d 90 70 1e 10 f0    	lea    -0xfefe190(%eax),%edx$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	8b 88 70 1e 10 f0    	mov    -0xfefe190(%eax),%ecx$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	b8 4d 6d 10 f0       	mov    $0xf0106d4d,%eax$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	2d b9 54 10 f0       	sub    $0xf01054b9,%eax$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	73 09                	jae    f0100a90 <debuginfo_eip+0x11b>$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	81 c1 b9 54 10 f0    	add    $0xf01054b9,%ecx$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	89 4e 08             	mov    %ecx,0x8(%esi)$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	8b 42 08             	mov    0x8(%edx),%eax$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	eb 06                	jmp    f0100a9e <debuginfo_eip+0x129>$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	6a 3a                	push   $0x3a$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	e8 02 08 00 00       	call   f01012ad <strfind>$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	8d 04 1b             	lea    (%ebx,%ebx,1),%eax$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	01 d8                	add    %ebx,%eax$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	8d 04 85 78 1e 10 f0 	lea    -0xfefe188(,%eax,4),%eax$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	eb 04                	jmp    f0100ac9 <debuginfo_eip+0x154>$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	4b                   	dec    %ebx$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	7c 34                	jl     f0100b01 <debuginfo_eip+0x18c>$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	8a 50 fc             	mov    -0x4(%eax),%dl$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	74 0a                	je     f0100adf <debuginfo_eip+0x16a>$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	75 eb                	jne    f0100ac5 <debuginfo_eip+0x150>$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	74 e6                	je     f0100ac5 <debuginfo_eip+0x150>$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	8d 04 1b             	lea    (%ebx,%ebx,1),%eax$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	01 c3                	add    %eax,%ebx$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	8b 14 9d 70 1e 10 f0 	mov    -0xfefe190(,%ebx,4),%edx$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	b8 4d 6d 10 f0       	mov    $0xf0106d4d,%eax$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	2d b9 54 10 f0       	sub    $0xf01054b9,%eax$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	39 c2                	cmp    %eax,%edx$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	73 08                	jae    f0100b01 <debuginfo_eip+0x18c>$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	81 c2 b9 54 10 f0    	add    $0xf01054b9,%edx$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	89 16                	mov    %edx,(%esi)$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	39 c8                	cmp    %ecx,%eax$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	7d 3e                	jge    f0100b49 <debuginfo_eip+0x1d4>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	8d 1c 00             	lea    (%eax,%eax,1),%ebx$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	01 d8                	add    %ebx,%eax$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	8d 04 85 80 1e 10 f0 	lea    -0xfefe180(,%eax,4),%eax$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	eb 04                	jmp    f0100b20 <debuginfo_eip+0x1ab>$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	ff 46 14             	incl   0x14(%esi)$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	42                   	inc    %edx$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	74 2c                	je     f0100b50 <debuginfo_eip+0x1db>$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	74 ef                	je     f0100b1c <debuginfo_eip+0x1a7>$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	eb 21                	jmp    f0100b55 <debuginfo_eip+0x1e0>$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	eb 1a                	jmp    f0100b55 <debuginfo_eip+0x1e0>$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	eb 13                	jmp    f0100b55 <debuginfo_eip+0x1e0>$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	eb 0c                	jmp    f0100b55 <debuginfo_eip+0x1e0>$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	eb 05                	jmp    f0100b55 <debuginfo_eip+0x1e0>$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	5b                   	pop    %ebx$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	5e                   	pop    %esi$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	5f                   	pop    %edi$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	5d                   	pop    %ebp$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	c3                   	ret    $/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d <printnum>:$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	55                   	push   %ebp$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	57                   	push   %edi$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	56                   	push   %esi$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	53                   	push   %ebx$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	89 c7                	mov    %eax,%edi$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	89 d6                	mov    %edx,%esi$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	39 d3                	cmp    %edx,%ebx$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	72 05                	jb     f0100b8d <printnum+0x30>$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	77 45                	ja     f0100bd2 <printnum+0x75>$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	53                   	push   %ebx$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	e8 17 09 00 00       	call   f01014c8 <__udivdi3>$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	52                   	push   %edx$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	50                   	push   %eax$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	89 f2                	mov    %esi,%edx$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	89 f8                	mov    %edi,%eax$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	e8 9e ff ff ff       	call   f0100b5d <printnum>$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	eb 16                	jmp    f0100bda <printnum+0x7d>$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	56                   	push   %esi$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	ff d7                	call   *%edi$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	eb 03                	jmp    f0100bd5 <printnum+0x78>$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	4b                   	dec    %ebx$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	85 db                	test   %ebx,%ebx$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	7f ea                	jg     f0100bc4 <printnum+0x67>$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	56                   	push   %esi$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	e8 e6 09 00 00       	call   f01015d8 <__umoddi3>$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	0f be 80 41 1c 10 f0 	movsbl -0xfefe3bf(%eax),%eax$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	50                   	push   %eax$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	ff d7                	call   *%edi$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	5b                   	pop    %ebx$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	5e                   	pop    %esi$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	5f                   	pop    %edi$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	5d                   	pop    %ebp$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	c3                   	ret    $/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a <getuint>:$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	55                   	push   %ebp$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	7e 0e                	jle    f0100c20 <getuint+0x16>$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	8b 10                	mov    (%eax),%edx$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	8b 02                	mov    (%edx),%eax$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	eb 22                	jmp    f0100c42 <getuint+0x38>$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	85 d2                	test   %edx,%edx$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	74 10                	je     f0100c34 <getuint+0x2a>$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	8b 10                	mov    (%eax),%edx$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	8b 02                	mov    (%edx),%eax$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	eb 0e                	jmp    f0100c42 <getuint+0x38>$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	8b 10                	mov    (%eax),%edx$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	8b 02                	mov    (%edx),%eax$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	5d                   	pop    %ebp$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	c3                   	ret    $/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44 <sprintputch>:$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	55                   	push   %ebp$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	ff 40 08             	incl   0x8(%eax)$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	8b 10                	mov    (%eax),%edx$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	73 0a                	jae    f0100c5e <sprintputch+0x1a>$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	88 02                	mov    %al,(%edx)$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	5d                   	pop    %ebp$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	c3                   	ret    $/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60 <printfmt>:$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	55                   	push   %ebp$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	50                   	push   %eax$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	e8 05 00 00 00       	call   f0100c7d <vprintfmt>$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	c9                   	leave  $/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	c3                   	ret    $/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d <vprintfmt>:$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	55                   	push   %ebp$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	57                   	push   %edi$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	56                   	push   %esi$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	53                   	push   %ebx$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	eb 12                	jmp    f0100ca3 <vprintfmt+0x26>$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	85 c0                	test   %eax,%eax$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	0f 84 68 03 00 00    	je     f0101001 <vprintfmt+0x384>$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	53                   	push   %ebx$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	50                   	push   %eax$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	ff d6                	call   *%esi$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	47                   	inc    %edi$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	75 e4                	jne    f0100c91 <vprintfmt+0x14>$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	eb 07                	jmp    f0100cd4 <vprintfmt+0x57>$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	0f b6 0f             	movzbl (%edi),%ecx$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	8a 07                	mov    (%edi),%al$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	3c 55                	cmp    $0x55,%al$/;"	l
f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	0f 87 fe 02 00 00    	ja     f0100fe8 <vprintfmt+0x36b>$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	ff 24 85 e0 1c 10 f0 	jmp    *-0xfefe320(,%eax,4)$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	eb d7                	jmp    f0100cd4 <vprintfmt+0x57>$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	01 c0                	add    %eax,%eax$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	8d 44 01 d0          	lea    -0x30(%ecx,%eax,1),%eax$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	0f be 0f             	movsbl (%edi),%ecx$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	8d 51 d0             	lea    -0x30(%ecx),%edx$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	77 34                	ja     f0100d50 <vprintfmt+0xd3>$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	47                   	inc    %edi$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	eb e9                	jmp    f0100d08 <vprintfmt+0x8b>$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	eb 24                	jmp    f0100d56 <vprintfmt+0xd9>$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	79 07                	jns    f0100d3f <vprintfmt+0xc2>$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	eb 90                	jmp    f0100cd4 <vprintfmt+0x57>$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	eb 84                	jmp    f0100cd4 <vprintfmt+0x57>$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	0f 89 74 ff ff ff    	jns    f0100cd4 <vprintfmt+0x57>$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	e9 62 ff ff ff       	jmp    f0100cd4 <vprintfmt+0x57>$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	42                   	inc    %edx$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	e9 59 ff ff ff       	jmp    f0100cd4 <vprintfmt+0x57>$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	53                   	push   %ebx$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	ff 30                	pushl  (%eax)$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	ff d6                	call   *%esi$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	e9 0c ff ff ff       	jmp    f0100ca3 <vprintfmt+0x26>$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	8b 00                	mov    (%eax),%eax$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	85 c0                	test   %eax,%eax$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	79 02                	jns    f0100da8 <vprintfmt+0x12b>$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	f7 d8                	neg    %eax$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	89 c2                	mov    %eax,%edx$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	7f 0b                	jg     f0100dba <vprintfmt+0x13d>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	8b 04 85 40 1e 10 f0 	mov    -0xfefe1c0(,%eax,4),%eax$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	85 c0                	test   %eax,%eax$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	75 18                	jne    f0100dd2 <vprintfmt+0x155>$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	52                   	push   %edx$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	68 59 1c 10 f0       	push   $0xf0101c59$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	53                   	push   %ebx$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	56                   	push   %esi$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	e8 99 fe ff ff       	call   f0100c60 <printfmt>$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	e9 d1 fe ff ff       	jmp    f0100ca3 <vprintfmt+0x26>$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	50                   	push   %eax$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	68 62 1c 10 f0       	push   $0xf0101c62$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	53                   	push   %ebx$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	56                   	push   %esi$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	e8 81 fe ff ff       	call   f0100c60 <printfmt>$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	e9 b9 fe ff ff       	jmp    f0100ca3 <vprintfmt+0x26>$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	8b 38                	mov    (%eax),%edi$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	85 ff                	test   %edi,%edi$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	75 05                	jne    f0100dfe <vprintfmt+0x181>$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	bf 52 1c 10 f0       	mov    $0xf0101c52,%edi$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	0f 8e 90 00 00 00    	jle    f0100e98 <vprintfmt+0x21b>$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	0f 84 8e 00 00 00    	je     f0100ea0 <vprintfmt+0x223>$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	57                   	push   %edi$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	e8 60 03 00 00       	call   f010117e <strnlen>$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	29 c1                	sub    %eax,%ecx$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	89 cf                	mov    %ecx,%edi$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	eb 0d                	jmp    f0100e44 <vprintfmt+0x1c7>$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	53                   	push   %ebx$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	ff d6                	call   *%esi$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	4f                   	dec    %edi$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	85 ff                	test   %edi,%edi$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	7f ef                	jg     f0100e37 <vprintfmt+0x1ba>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	89 c8                	mov    %ecx,%eax$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	85 c9                	test   %ecx,%ecx$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	79 05                	jns    f0100e59 <vprintfmt+0x1dc>$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	29 c1                	sub    %eax,%ecx$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	eb 3d                	jmp    f0100ea6 <vprintfmt+0x229>$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	74 19                	je     f0100e88 <vprintfmt+0x20b>$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	0f be c0             	movsbl %al,%eax$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	76 0e                	jbe    f0100e88 <vprintfmt+0x20b>$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	53                   	push   %ebx$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	6a 3f                	push   $0x3f$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	eb 0b                	jmp    f0100e93 <vprintfmt+0x216>$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	53                   	push   %ebx$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	52                   	push   %edx$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	eb 0e                	jmp    f0100ea6 <vprintfmt+0x229>$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	eb 06                	jmp    f0100ea6 <vprintfmt+0x229>$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	47                   	inc    %edi$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	8a 47 ff             	mov    -0x1(%edi),%al$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	0f be d0             	movsbl %al,%edx$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	85 d2                	test   %edx,%edx$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	74 1d                	je     f0100ece <vprintfmt+0x251>$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	85 f6                	test   %esi,%esi$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	78 b4                	js     f0100e69 <vprintfmt+0x1ec>$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	4e                   	dec    %esi$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	79 b1                	jns    f0100e69 <vprintfmt+0x1ec>$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	eb 14                	jmp    f0100ed4 <vprintfmt+0x257>$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	53                   	push   %ebx$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	6a 20                	push   $0x20$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	ff d6                	call   *%esi$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	4f                   	dec    %edi$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	eb 06                	jmp    f0100ed4 <vprintfmt+0x257>$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	85 ff                	test   %edi,%edi$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	7f e8                	jg     f0100ec0 <vprintfmt+0x243>$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	e9 c3 fd ff ff       	jmp    f0100ca3 <vprintfmt+0x26>$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	7e 16                	jle    f0100efb <vprintfmt+0x27e>$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	eb 32                	jmp    f0100f2d <vprintfmt+0x2b0>$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	85 d2                	test   %edx,%edx$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	74 18                	je     f0100f17 <vprintfmt+0x29a>$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	89 c1                	mov    %eax,%ecx$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	eb 16                	jmp    f0100f2d <vprintfmt+0x2b0>$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	89 c1                	mov    %eax,%ecx$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	79 76                	jns    f0100faf <vprintfmt+0x332>$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	53                   	push   %ebx$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	6a 2d                	push   $0x2d$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	ff d6                	call   *%esi$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	f7 d8                	neg    %eax$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	f7 da                	neg    %edx$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	eb 5c                	jmp    f0100fb4 <vprintfmt+0x337>$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	e8 aa fc ff ff       	call   f0100c0a <getuint>$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	eb 4d                	jmp    f0100fb4 <vprintfmt+0x337>$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	e8 9b fc ff ff       	call   f0100c0a <getuint>$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	eb 3e                	jmp    f0100fb4 <vprintfmt+0x337>$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	53                   	push   %ebx$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	6a 30                	push   $0x30$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	ff d6                	call   *%esi$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	53                   	push   %ebx$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	6a 78                	push   $0x78$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	ff d6                	call   *%esi$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	eb 14                	jmp    f0100fb4 <vprintfmt+0x337>$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	e8 62 fc ff ff       	call   f0100c0a <getuint>$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	eb 05                	jmp    f0100fb4 <vprintfmt+0x337>$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	57                   	push   %edi$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	51                   	push   %ecx$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	52                   	push   %edx$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	50                   	push   %eax$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	89 da                	mov    %ebx,%edx$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	89 f0                	mov    %esi,%eax$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	e8 92 fb ff ff       	call   f0100b5d <printnum>$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	e9 cd fc ff ff       	jmp    f0100ca3 <vprintfmt+0x26>$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	53                   	push   %ebx$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	51                   	push   %ecx$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	ff d6                	call   *%esi$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	e9 bb fc ff ff       	jmp    f0100ca3 <vprintfmt+0x26>$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	53                   	push   %ebx$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	6a 25                	push   $0x25$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	ff d6                	call   *%esi$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	eb 01                	jmp    f0100ff6 <vprintfmt+0x379>$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	4f                   	dec    %edi$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	75 f9                	jne    f0100ff5 <vprintfmt+0x378>$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	e9 a2 fc ff ff       	jmp    f0100ca3 <vprintfmt+0x26>$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	5b                   	pop    %ebx$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	5e                   	pop    %esi$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	5f                   	pop    %edi$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	5d                   	pop    %ebp$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	c3                   	ret    $/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009 <vsnprintf>:$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	55                   	push   %ebp$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	89 e5                	mov    %esp,%ebp$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	85 c0                	test   %eax,%eax$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	74 26                	je     f0101050 <vsnprintf+0x47>$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	85 d2                	test   %edx,%edx$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	7e 29                	jle    f0101057 <vsnprintf+0x4e>$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	50                   	push   %eax$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	68 44 0c 10 f0       	push   $0xf0100c44$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	e8 3b fc ff ff       	call   f0100c7d <vprintfmt>$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101048	obj/kern/kernel.asm	/^f0101048:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	eb 0c                	jmp    f010105c <vsnprintf+0x53>$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	eb 05                	jmp    f010105c <vsnprintf+0x53>$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	c9                   	leave  $/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	c3                   	ret    $/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e <snprintf>:$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	55                   	push   %ebp$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	50                   	push   %eax$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	e8 93 ff ff ff       	call   f0101009 <vsnprintf>$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	c9                   	leave  $/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	c3                   	ret    $/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078 <readline>:$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	55                   	push   %ebp$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	89 e5                	mov    %esp,%ebp$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	57                   	push   %edi$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	56                   	push   %esi$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	53                   	push   %ebx$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	85 c0                	test   %eax,%eax$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	74 11                	je     f0101099 <readline+0x21>$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	50                   	push   %eax$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	68 62 1c 10 f0       	push   $0xf0101c62$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	e8 d8 f7 ff ff       	call   f010086e <cprintf>$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	6a 00                	push   $0x0$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	e8 52 f5 ff ff       	call   f01005f5 <iscons>$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	89 c7                	mov    %eax,%edi$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	e8 32 f5 ff ff       	call   f01005e4 <getchar>$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	89 c3                	mov    %eax,%ebx$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	85 c0                	test   %eax,%eax$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	79 1b                	jns    f01010d3 <readline+0x5b>$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	50                   	push   %eax$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	68 60 1e 10 f0       	push   $0xf0101e60$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	e8 a8 f7 ff ff       	call   f010086e <cprintf>$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	e9 8d 00 00 00       	jmp    f0101160 <readline+0xe8>$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	74 72                	je     f010114a <readline+0xd2>$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	75 16                	jne    f01010f3 <readline+0x7b>$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	eb 65                	jmp    f0101144 <readline+0xcc>$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	85 ff                	test   %edi,%edi$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	74 0d                	je     f01010f0 <readline+0x78>$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	6a 08                	push   $0x8$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	e8 e7 f4 ff ff       	call   f01005d4 <cputchar>$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	4e                   	dec    %esi$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	eb ba                	jmp    f01010ad <readline+0x35>$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	7e 23                	jle    f010111b <readline+0xa3>$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	7f 1b                	jg     f010111b <readline+0xa3>$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	85 ff                	test   %edi,%edi$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	74 0c                	je     f0101110 <readline+0x98>$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	53                   	push   %ebx$/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	e8 c7 f4 ff ff       	call   f01005d4 <cputchar>$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	88 9e 40 15 11 f0    	mov    %bl,-0xfeeeac0(%esi)$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	eb 92                	jmp    f01010ad <readline+0x35>$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	74 05                	je     f0101125 <readline+0xad>$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	75 88                	jne    f01010ad <readline+0x35>$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	85 ff                	test   %edi,%edi$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	74 0d                	je     f0101136 <readline+0xbe>$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	6a 0a                	push   $0xa$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	e8 a1 f4 ff ff       	call   f01005d4 <cputchar>$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	c6 86 40 15 11 f0 00 	movb   $0x0,-0xfeeeac0(%esi)$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	b8 40 15 11 f0       	mov    $0xf0111540,%eax$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	eb 1c                	jmp    f0101160 <readline+0xe8>$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	85 f6                	test   %esi,%esi$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	7f 97                	jg     f01010df <readline+0x67>$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	eb 09                	jmp    f0101153 <readline+0xdb>$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	85 f6                	test   %esi,%esi$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	7f 91                	jg     f01010df <readline+0x67>$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	e9 5a ff ff ff       	jmp    f01010ad <readline+0x35>$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	7e a5                	jle    f0101100 <readline+0x88>$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	e9 4d ff ff ff       	jmp    f01010ad <readline+0x35>$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	5b                   	pop    %ebx$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	5e                   	pop    %esi$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	5f                   	pop    %edi$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	5d                   	pop    %ebp$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	c3                   	ret    $/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168 <strlen>:$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	55                   	push   %ebp$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	89 e5                	mov    %esp,%ebp$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	eb 01                	jmp    f0101176 <strlen+0xe>$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	40                   	inc    %eax$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	75 f9                	jne    f0101175 <strlen+0xd>$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	5d                   	pop    %ebp$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	c3                   	ret    $/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e <strnlen>:$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	55                   	push   %ebp$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	eb 01                	jmp    f010118f <strnlen+0x11>$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	42                   	inc    %edx$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	39 c2                	cmp    %eax,%edx$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	74 08                	je     f010119b <strnlen+0x1d>$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	75 f5                	jne    f010118e <strnlen+0x10>$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	89 d0                	mov    %edx,%eax$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	5d                   	pop    %ebp$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	c3                   	ret    $/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d <strcpy>:$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	55                   	push   %ebp$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	89 e5                	mov    %esp,%ebp$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	53                   	push   %ebx$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	89 c2                	mov    %eax,%edx$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	42                   	inc    %edx$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	41                   	inc    %ecx$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	8a 59 ff             	mov    -0x1(%ecx),%bl$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	84 db                	test   %bl,%bl$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	75 f4                	jne    f01011a9 <strcpy+0xc>$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	5b                   	pop    %ebx$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	5d                   	pop    %ebp$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	c3                   	ret    $/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8 <strcat>:$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	55                   	push   %ebp$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	53                   	push   %ebx$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	53                   	push   %ebx$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	e8 a3 ff ff ff       	call   f0101168 <strlen>$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	83 c4 04             	add    $0x4,%esp$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	01 d8                	add    %ebx,%eax$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	50                   	push   %eax$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	e8 ca ff ff ff       	call   f010119d <strcpy>$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	89 d8                	mov    %ebx,%eax$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	c9                   	leave  $/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	c3                   	ret    $/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da <strncpy>:$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	55                   	push   %ebp$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	89 e5                	mov    %esp,%ebp$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	56                   	push   %esi$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	53                   	push   %ebx$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	89 f3                	mov    %esi,%ebx$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	89 f2                	mov    %esi,%edx$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	eb 0c                	jmp    f01011fa <strncpy+0x20>$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	42                   	inc    %edx$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	8a 01                	mov    (%ecx),%al$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	39 da                	cmp    %ebx,%edx$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	75 f0                	jne    f01011ee <strncpy+0x14>$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	89 f0                	mov    %esi,%eax$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	5b                   	pop    %ebx$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	5e                   	pop    %esi$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	5d                   	pop    %ebp$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	c3                   	ret    $/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204 <strlcpy>:$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	55                   	push   %ebp$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	89 e5                	mov    %esp,%ebp$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	56                   	push   %esi$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	53                   	push   %ebx$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	85 c0                	test   %eax,%eax$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	74 1e                	je     f0101234 <strlcpy+0x30>$/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	8d 44 06 ff          	lea    -0x1(%esi,%eax,1),%eax$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	89 f2                	mov    %esi,%edx$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	eb 05                	jmp    f0101223 <strlcpy+0x1f>$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	42                   	inc    %edx$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	41                   	inc    %ecx$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	39 c2                	cmp    %eax,%edx$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	74 08                	je     f010122f <strlcpy+0x2b>$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	8a 19                	mov    (%ecx),%bl$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	84 db                	test   %bl,%bl$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	75 f1                	jne    f010121e <strlcpy+0x1a>$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	89 d0                	mov    %edx,%eax$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	eb 02                	jmp    f0101236 <strlcpy+0x32>$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	89 f0                	mov    %esi,%eax$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	29 f0                	sub    %esi,%eax$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	5b                   	pop    %ebx$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	5e                   	pop    %esi$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	5d                   	pop    %ebp$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	c3                   	ret    $/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c <strcmp>:$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	55                   	push   %ebp$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	89 e5                	mov    %esp,%ebp$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	eb 02                	jmp    f0101249 <strcmp+0xd>$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	41                   	inc    %ecx$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	42                   	inc    %edx$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	8a 01                	mov    (%ecx),%al$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	84 c0                	test   %al,%al$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	74 04                	je     f0101253 <strcmp+0x17>$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	3a 02                	cmp    (%edx),%al$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	74 f4                	je     f0101247 <strcmp+0xb>$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	29 d0                	sub    %edx,%eax$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	5d                   	pop    %ebp$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	c3                   	ret    $/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d <strncmp>:$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	55                   	push   %ebp$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	53                   	push   %ebx$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	89 c3                	mov    %eax,%ebx$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	eb 02                	jmp    f0101270 <strncmp+0x13>$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	40                   	inc    %eax$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	42                   	inc    %edx$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	39 d8                	cmp    %ebx,%eax$/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	74 14                	je     f0101288 <strncmp+0x2b>$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	8a 08                	mov    (%eax),%cl$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	84 c9                	test   %cl,%cl$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	74 04                	je     f010127e <strncmp+0x21>$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	3a 0a                	cmp    (%edx),%cl$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	74 f0                	je     f010126e <strncmp+0x11>$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	29 d0                	sub    %edx,%eax$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	eb 05                	jmp    f010128d <strncmp+0x30>$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	5b                   	pop    %ebx$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	5d                   	pop    %ebp$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	c3                   	ret    $/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290 <strchr>:$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	55                   	push   %ebp$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	89 e5                	mov    %esp,%ebp$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	eb 05                	jmp    f01012a0 <strchr+0x10>$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	38 ca                	cmp    %cl,%dl$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	74 0c                	je     f01012ab <strchr+0x1b>$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	40                   	inc    %eax$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	8a 10                	mov    (%eax),%dl$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	84 d2                	test   %dl,%dl$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	75 f5                	jne    f010129b <strchr+0xb>$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	5d                   	pop    %ebp$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	c3                   	ret    $/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad <strfind>:$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	55                   	push   %ebp$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	eb 05                	jmp    f01012bd <strfind+0x10>$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	38 ca                	cmp    %cl,%dl$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	74 07                	je     f01012c3 <strfind+0x16>$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	40                   	inc    %eax$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	8a 10                	mov    (%eax),%dl$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	84 d2                	test   %dl,%dl$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	75 f5                	jne    f01012b8 <strfind+0xb>$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	5d                   	pop    %ebp$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	c3                   	ret    $/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5 <memset>:$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	55                   	push   %ebp$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	57                   	push   %edi$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	56                   	push   %esi$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	53                   	push   %ebx$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	85 c9                	test   %ecx,%ecx$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	74 36                	je     f010130b <memset+0x46>$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	75 28                	jne    f0101305 <memset+0x40>$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	75 23                	jne    f0101305 <memset+0x40>$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	89 d3                	mov    %edx,%ebx$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	89 d6                	mov    %edx,%esi$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	89 d0                	mov    %edx,%eax$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	09 f0                	or     %esi,%eax$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	09 c2                	or     %eax,%edx$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	89 d8                	mov    %ebx,%eax$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	09 d0                	or     %edx,%eax$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	fc                   	cld    $/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	eb 06                	jmp    f010130b <memset+0x46>$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	fc                   	cld    $/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	89 f8                	mov    %edi,%eax$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	5b                   	pop    %ebx$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	5e                   	pop    %esi$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	5f                   	pop    %edi$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	5d                   	pop    %ebp$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	c3                   	ret    $/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312 <memmove>:$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	55                   	push   %ebp$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	89 e5                	mov    %esp,%ebp$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	57                   	push   %edi$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	56                   	push   %esi$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	39 c6                	cmp    %eax,%esi$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	73 33                	jae    f0101357 <memmove+0x45>$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	39 d0                	cmp    %edx,%eax$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	73 2c                	jae    f0101357 <memmove+0x45>$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	89 d6                	mov    %edx,%esi$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	09 fe                	or     %edi,%esi$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	75 13                	jne    f010134d <memmove+0x3b>$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	75 0e                	jne    f010134d <memmove+0x3b>$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	fd                   	std    $/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	eb 07                	jmp    f0101354 <memmove+0x42>$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	4f                   	dec    %edi$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	fd                   	std    $/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	fc                   	cld    $/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	eb 1d                	jmp    f0101374 <memmove+0x62>$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	89 f2                	mov    %esi,%edx$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	09 c2                	or     %eax,%edx$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	75 0f                	jne    f010136f <memmove+0x5d>$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	75 0a                	jne    f010136f <memmove+0x5d>$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	89 c7                	mov    %eax,%edi$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	fc                   	cld    $/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	eb 05                	jmp    f0101374 <memmove+0x62>$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	89 c7                	mov    %eax,%edi$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	fc                   	cld    $/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	5e                   	pop    %esi$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	5f                   	pop    %edi$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	5d                   	pop    %ebp$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	c3                   	ret    $/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378 <memcpy>:$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	55                   	push   %ebp$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	89 e5                	mov    %esp,%ebp$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	e8 89 ff ff ff       	call   f0101312 <memmove>$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	c9                   	leave  $/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	c3                   	ret    $/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b <memcmp>:$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	55                   	push   %ebp$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	89 e5                	mov    %esp,%ebp$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	56                   	push   %esi$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	53                   	push   %ebx$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	89 c6                	mov    %eax,%esi$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	eb 14                	jmp    f01013b1 <memcmp+0x26>$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	8a 08                	mov    (%eax),%cl$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	8a 1a                	mov    (%edx),%bl$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	38 d9                	cmp    %bl,%cl$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	74 0a                	je     f01013af <memcmp+0x24>$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	29 d8                	sub    %ebx,%eax$/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	eb 0b                	jmp    f01013ba <memcmp+0x2f>$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	40                   	inc    %eax$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	42                   	inc    %edx$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	39 f0                	cmp    %esi,%eax$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	75 e8                	jne    f010139d <memcmp+0x12>$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	5b                   	pop    %ebx$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	5e                   	pop    %esi$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	5d                   	pop    %ebp$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	c3                   	ret    $/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be <memfind>:$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	55                   	push   %ebp$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	53                   	push   %ebx$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	89 c1                	mov    %eax,%ecx$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	eb 08                	jmp    f01013d8 <memfind+0x1a>$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	39 da                	cmp    %ebx,%edx$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	74 05                	je     f01013dc <memfind+0x1e>$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	40                   	inc    %eax$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	39 c8                	cmp    %ecx,%eax$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	72 f4                	jb     f01013d0 <memfind+0x12>$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	5b                   	pop    %ebx$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	5d                   	pop    %ebp$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	c3                   	ret    $/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df <strtol>:$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	55                   	push   %ebp$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	57                   	push   %edi$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	56                   	push   %esi$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	53                   	push   %ebx$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	eb 01                	jmp    f01013eb <strtol+0xc>$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	41                   	inc    %ecx$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	8a 01                	mov    (%ecx),%al$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	3c 20                	cmp    $0x20,%al$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	74 f9                	je     f01013ea <strtol+0xb>$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	3c 09                	cmp    $0x9,%al$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	74 f5                	je     f01013ea <strtol+0xb>$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	75 08                	jne    f0101401 <strtol+0x22>$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	41                   	inc    %ecx$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	eb 11                	jmp    f0101412 <strtol+0x33>$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	75 08                	jne    f010140d <strtol+0x2e>$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	41                   	inc    %ecx$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	eb 05                	jmp    f0101412 <strtol+0x33>$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	0f 84 87 00 00 00    	je     f01014a3 <strtol+0xc4>$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	75 27                	jne    f0101449 <strtol+0x6a>$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	75 22                	jne    f0101449 <strtol+0x6a>$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	e9 88 00 00 00       	jmp    f01014b4 <strtol+0xd5>$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	83 c1 02             	add    $0x2,%ecx$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	eb 11                	jmp    f0101449 <strtol+0x6a>$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	41                   	inc    %ecx$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	eb 07                	jmp    f0101449 <strtol+0x6a>$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	8a 11                	mov    (%ecx),%dl$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	77 08                	ja     f0101460 <strtol+0x81>$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	0f be d2             	movsbl %dl,%edx$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	83 ea 30             	sub    $0x30,%edx$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	eb 22                	jmp    f0101482 <strtol+0xa3>$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	89 f3                	mov    %esi,%ebx$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	77 08                	ja     f0101472 <strtol+0x93>$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	0f be d2             	movsbl %dl,%edx$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	eb 10                	jmp    f0101482 <strtol+0xa3>$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	89 f3                	mov    %esi,%ebx$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	77 14                	ja     f0101490 <strtol+0xb1>$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	0f be d2             	movsbl %dl,%edx$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	7d 09                	jge    f0101490 <strtol+0xb1>$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	41                   	inc    %ecx$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	01 d0                	add    %edx,%eax$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	eb be                	jmp    f010144e <strtol+0x6f>$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	74 05                	je     f010149b <strtol+0xbc>$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	89 0e                	mov    %ecx,(%esi)$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	85 ff                	test   %edi,%edi$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	74 21                	je     f01014c0 <strtol+0xe1>$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	f7 d8                	neg    %eax$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	eb 1d                	jmp    f01014c0 <strtol+0xe1>$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	75 9a                	jne    f0101442 <strtol+0x63>$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	0f 84 7a ff ff ff    	je     f010142c <strtol+0x4d>$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	eb 84                	jmp    f0101438 <strtol+0x59>$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	0f 84 6e ff ff ff    	je     f010142c <strtol+0x4d>$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	eb 89                	jmp    f0101449 <strtol+0x6a>$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	5b                   	pop    %ebx$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	5e                   	pop    %esi$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	5f                   	pop    %edi$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	5d                   	pop    %ebp$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	c3                   	ret    $/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	66 90                	xchg   %ax,%ax$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	90                   	nop$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8 <__udivdi3>:$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	55                   	push   %ebp$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	57                   	push   %edi$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	56                   	push   %esi$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	53                   	push   %ebx$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	89 ca                	mov    %ecx,%edx$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	89 f8                	mov    %edi,%eax$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	85 f6                	test   %esi,%esi$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	75 2d                	jne    f0101518 <__udivdi3+0x50>$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	39 cf                	cmp    %ecx,%edi$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	77 65                	ja     f0101554 <__udivdi3+0x8c>$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	89 fd                	mov    %edi,%ebp$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	85 ff                	test   %edi,%edi$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	75 0b                	jne    f0101500 <__udivdi3+0x38>$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	31 d2                	xor    %edx,%edx$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	f7 f7                	div    %edi$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	89 c5                	mov    %eax,%ebp$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	31 d2                	xor    %edx,%edx$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	89 c8                	mov    %ecx,%eax$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	f7 f5                	div    %ebp$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	89 c1                	mov    %eax,%ecx$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	89 d8                	mov    %ebx,%eax$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	f7 f5                	div    %ebp$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	89 cf                	mov    %ecx,%edi$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	89 fa                	mov    %edi,%edx$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	5b                   	pop    %ebx$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	5e                   	pop    %esi$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	5f                   	pop    %edi$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	5d                   	pop    %ebp$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	c3                   	ret    $/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	39 ce                	cmp    %ecx,%esi$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	77 28                	ja     f0101544 <__udivdi3+0x7c>$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	0f bd fe             	bsr    %esi,%edi$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	75 40                	jne    f0101564 <__udivdi3+0x9c>$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	39 ce                	cmp    %ecx,%esi$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	72 0a                	jb     f0101532 <__udivdi3+0x6a>$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	0f 87 9e 00 00 00    	ja     f01015d0 <__udivdi3+0x108>$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	89 fa                	mov    %edi,%edx$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	5b                   	pop    %ebx$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	5e                   	pop    %esi$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	5f                   	pop    %edi$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	5d                   	pop    %ebp$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	c3                   	ret    $/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	31 ff                	xor    %edi,%edi$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	31 c0                	xor    %eax,%eax$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	89 fa                	mov    %edi,%edx$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	5b                   	pop    %ebx$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	5e                   	pop    %esi$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	5f                   	pop    %edi$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	5d                   	pop    %ebp$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	c3                   	ret    $/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	66 90                	xchg   %ax,%ax$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	89 d8                	mov    %ebx,%eax$/;"	l
f0101556	obj/kern/kernel.asm	/^f0101556:	f7 f7                	div    %edi$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	31 ff                	xor    %edi,%edi$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	89 fa                	mov    %edi,%edx$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	5b                   	pop    %ebx$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	5e                   	pop    %esi$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	5f                   	pop    %edi$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	5d                   	pop    %ebp$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	c3                   	ret    $/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	bd 20 00 00 00       	mov    $0x20,%ebp$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	89 eb                	mov    %ebp,%ebx$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	29 fb                	sub    %edi,%ebx$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	89 f9                	mov    %edi,%ecx$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	d3 e6                	shl    %cl,%esi$/;"	d
f0101571	obj/kern/kernel.asm	/^f0101571:	89 c5                	mov    %eax,%ebp$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	88 d9                	mov    %bl,%cl$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	d3 ed                	shr    %cl,%ebp$/;"	d
f0101577	obj/kern/kernel.asm	/^f0101577:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	09 f1                	or     %esi,%ecx$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	89 f9                	mov    %edi,%ecx$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	d3 e0                	shl    %cl,%eax$/;"	d
f0101583	obj/kern/kernel.asm	/^f0101583:	89 c5                	mov    %eax,%ebp$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	89 d6                	mov    %edx,%esi$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	88 d9                	mov    %bl,%cl$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	d3 ee                	shr    %cl,%esi$/;"	d
f010158b	obj/kern/kernel.asm	/^f010158b:	89 f9                	mov    %edi,%ecx$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	d3 e2                	shl    %cl,%edx$/;"	d
f010158f	obj/kern/kernel.asm	/^f010158f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	88 d9                	mov    %bl,%cl$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	d3 e8                	shr    %cl,%eax$/;"	d
f0101597	obj/kern/kernel.asm	/^f0101597:	09 c2                	or     %eax,%edx$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	89 d0                	mov    %edx,%eax$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	89 f2                	mov    %esi,%edx$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	f7 74 24 0c          	divl   0xc(%esp)$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	89 d6                	mov    %edx,%esi$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	89 c3                	mov    %eax,%ebx$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	f7 e5                	mul    %ebp$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	39 d6                	cmp    %edx,%esi$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	72 19                	jb     f01015c4 <__udivdi3+0xfc>$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	74 0b                	je     f01015b8 <__udivdi3+0xf0>$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	89 d8                	mov    %ebx,%eax$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	31 ff                	xor    %edi,%edi$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	e9 58 ff ff ff       	jmp    f010150e <__udivdi3+0x46>$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	66 90                	xchg   %ax,%ax$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	89 f9                	mov    %edi,%ecx$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	d3 e2                	shl    %cl,%edx$/;"	d
f01015c0	obj/kern/kernel.asm	/^f01015c0:	39 c2                	cmp    %eax,%edx$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	73 e9                	jae    f01015ad <__udivdi3+0xe5>$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	31 ff                	xor    %edi,%edi$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	e9 40 ff ff ff       	jmp    f010150e <__udivdi3+0x46>$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	66 90                	xchg   %ax,%ax$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	31 c0                	xor    %eax,%eax$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	e9 37 ff ff ff       	jmp    f010150e <__udivdi3+0x46>$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	90                   	nop$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8 <__umoddi3>:$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8:	55                   	push   %ebp$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	57                   	push   %edi$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	56                   	push   %esi$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	53                   	push   %ebx$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	8b 44 24 3c          	mov    0x3c(%esp),%eax$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	89 f3                	mov    %esi,%ebx$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	89 fa                	mov    %edi,%edx$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	85 c0                	test   %eax,%eax$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	75 1a                	jne    f0101620 <__umoddi3+0x48>$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	39 f7                	cmp    %esi,%edi$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	0f 86 a2 00 00 00    	jbe    f01016b0 <__umoddi3+0xd8>$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	89 c8                	mov    %ecx,%eax$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	89 f2                	mov    %esi,%edx$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	f7 f7                	div    %edi$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	89 d0                	mov    %edx,%eax$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	31 d2                	xor    %edx,%edx$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	5b                   	pop    %ebx$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	5e                   	pop    %esi$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	5f                   	pop    %edi$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	5d                   	pop    %ebp$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	c3                   	ret    $/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	39 f0                	cmp    %esi,%eax$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	0f 87 ac 00 00 00    	ja     f01016d4 <__umoddi3+0xfc>$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	0f 84 ac 00 00 00    	je     f01016e0 <__umoddi3+0x108>$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	29 ef                	sub    %ebp,%edi$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	89 fe                	mov    %edi,%esi$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	d3 e0                	shl    %cl,%eax$/;"	d
f0101645	obj/kern/kernel.asm	/^f0101645:	89 d7                	mov    %edx,%edi$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	89 f1                	mov    %esi,%ecx$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	d3 ef                	shr    %cl,%edi$/;"	d
f010164b	obj/kern/kernel.asm	/^f010164b:	09 c7                	or     %eax,%edi$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	d3 e2                	shl    %cl,%edx$/;"	d
f0101651	obj/kern/kernel.asm	/^f0101651:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	89 d8                	mov    %ebx,%eax$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	d3 e0                	shl    %cl,%eax$/;"	d
f0101658	obj/kern/kernel.asm	/^f0101658:	89 c2                	mov    %eax,%edx$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	d3 e0                	shl    %cl,%eax$/;"	d
f0101660	obj/kern/kernel.asm	/^f0101660:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	89 f1                	mov    %esi,%ecx$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	d3 e8                	shr    %cl,%eax$/;"	d
f010166c	obj/kern/kernel.asm	/^f010166c:	09 d0                	or     %edx,%eax$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	d3 eb                	shr    %cl,%ebx$/;"	d
f0101670	obj/kern/kernel.asm	/^f0101670:	89 da                	mov    %ebx,%edx$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	f7 f7                	div    %edi$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	89 d3                	mov    %edx,%ebx$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	f7 24 24             	mull   (%esp)$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	89 c6                	mov    %eax,%esi$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	89 d1                	mov    %edx,%ecx$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	39 d3                	cmp    %edx,%ebx$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	0f 82 87 00 00 00    	jb     f010170c <__umoddi3+0x134>$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	0f 84 91 00 00 00    	je     f010171c <__umoddi3+0x144>$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	29 f2                	sub    %esi,%edx$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	19 cb                	sbb    %ecx,%ebx$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	89 d8                	mov    %ebx,%eax$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	8a 4c 24 0c          	mov    0xc(%esp),%cl$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	d3 e0                	shl    %cl,%eax$/;"	d
f010169b	obj/kern/kernel.asm	/^f010169b:	89 e9                	mov    %ebp,%ecx$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	d3 ea                	shr    %cl,%edx$/;"	d
f010169f	obj/kern/kernel.asm	/^f010169f:	09 d0                	or     %edx,%eax$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	89 e9                	mov    %ebp,%ecx$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	d3 eb                	shr    %cl,%ebx$/;"	d
f01016a5	obj/kern/kernel.asm	/^f01016a5:	89 da                	mov    %ebx,%edx$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	5b                   	pop    %ebx$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	5e                   	pop    %esi$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	5f                   	pop    %edi$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	5d                   	pop    %ebp$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	c3                   	ret    $/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	90                   	nop$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	89 fd                	mov    %edi,%ebp$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	85 ff                	test   %edi,%edi$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	75 0b                	jne    f01016c1 <__umoddi3+0xe9>$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	31 d2                	xor    %edx,%edx$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	f7 f7                	div    %edi$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	89 c5                	mov    %eax,%ebp$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	89 f0                	mov    %esi,%eax$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	31 d2                	xor    %edx,%edx$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	f7 f5                	div    %ebp$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	89 c8                	mov    %ecx,%eax$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	f7 f5                	div    %ebp$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	89 d0                	mov    %edx,%eax$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	e9 44 ff ff ff       	jmp    f0101616 <__umoddi3+0x3e>$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	66 90                	xchg   %ax,%ax$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	89 c8                	mov    %ecx,%eax$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	89 f2                	mov    %esi,%edx$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	5b                   	pop    %ebx$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	5e                   	pop    %esi$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	5f                   	pop    %edi$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	5d                   	pop    %ebp$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	c3                   	ret    $/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	3b 04 24             	cmp    (%esp),%eax$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	72 06                	jb     f01016eb <__umoddi3+0x113>$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	3b 7c 24 04          	cmp    0x4(%esp),%edi$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	77 0f                	ja     f01016fa <__umoddi3+0x122>$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	89 f2                	mov    %esi,%edx$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	29 f9                	sub    %edi,%ecx$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	1b 54 24 0c          	sbb    0xc(%esp),%edx$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	5b                   	pop    %ebx$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	5e                   	pop    %esi$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	5f                   	pop    %edi$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	5d                   	pop    %ebp$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	c3                   	ret    $/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	2b 04 24             	sub    (%esp),%eax$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	19 fa                	sbb    %edi,%edx$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	89 d1                	mov    %edx,%ecx$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	89 c6                	mov    %eax,%esi$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	e9 71 ff ff ff       	jmp    f010168b <__umoddi3+0xb3>$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	66 90                	xchg   %ax,%ax$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	39 44 24 04          	cmp    %eax,0x4(%esp)$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	72 ea                	jb     f010170c <__umoddi3+0x134>$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	e9 62 ff ff ff       	jmp    f010168b <__umoddi3+0xb3>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_init	kern/init.c	/^i386_init(void)$/;"	f
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
n0	obj/kern/kernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/kern/kernel.asm	/^  n0 = nn.s.low;$/;"	d
n1	obj/kern/kernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/kern/kernel.asm	/^  n1 = nn.s.high;$/;"	d
n2	obj/kern/kernel.asm	/^	      n2 = n1 >> b;$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^            num = getuint(&ap,lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	/^#define offsetof(/;"	d
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
print_function	gradelib.py	/^from __future__ import print_function$/;"	i
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
q0	obj/kern/kernel.asm	/^		  q0 = 1;$/;"	d
q1	obj/kern/kernel.asm	/^	      q1 = 0;$/;"	d
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
re	grade-lab1	/^import re$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon3	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	/^#define va_start(/;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	/^#define warn(/;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon3	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
